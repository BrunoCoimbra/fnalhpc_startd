#!/bin/bash

# Terminal utils

# Launch a full stack CMS glidein on a set of THETA nodes
# Gathering parameters for the request
THETA_USER=macosta
NODE_CNT=1
QUEUE=debug-cache-quad
TIME="60"
JOB_ID=${RANDOM}
verbose='false'

while getopts 'u:n:q:t:v:j:f:' flag; do
  case "${flag}" in
    u) THETA_USER="${OPTARG}" ;;
    n) NODE_CNT="${OPTARG}" ;;
    q) QUEUE="${OPTARG}" ;;
    t) TIME="${OPTARG}" ;;
    j) JOB_ID="${OPTARG}" ;;
    f) SCHEDD_FILE="${OPTARG}" ;;
    v) verbose='true' ;;
    *) echo "Usage: $0 -u [<THETA user>] -n [<node cnt>] [<THETA base directory>]" 1>&2 ; exit 1
       ;;
  esac
done

SLOT_PREFIX="cobalt-cms-${JOB_ID}"
GLIDEIN_NAME="cobalt-cms-${JOB_ID}@theta.alcf.anl.gov"
THETA_BASE_DIR="/lus/grand/projects/HighLumin/job_area/${SLOT_PREFIX}"
SOURCE="$(dirname "${PWD}")"
EDGE_BASE_DIR=`pwd`

echo "====== Submitting a Lumberjack cobalt job from ${HOSTNAME} under local Linux user $(whoami)"
LNS=$(qstat -u ${THETA_USER} | wc -l)
if [ $LNS -gt 2 ]
then
  echo "WARN: There are COBALT jobs in the queue"
  qstat -u ${THETA_USER}
fi

echo INFO: Using directory $THETA_BASE_DIR

# Set up local Condor installation
echo ====== Writing local files
echo -n > here.info
echo "${SLOT_PREFIX}" >> here.info
cp -dR ${SOURCE}/skeleton/* .
chmod 400 pool_password
# This will ultimately go inside Singularity thus, the odd path
echo LOCAL_DIR=${PWD} >>condor_config
cat >config.d/97-personal2.conf <<EOF
# Run-time settings for this personal condor setup
#new startd name
MASTER_NAME = master_${GLIDEIN_NAME}
COLLECTOR_NAME = coll_${GLIDEIN_NAME} 
SCHEDD_NAME = sched_${GLIDEIN_NAME}   
EOF

# create sshfs connection
echo ====== Creating base directory on shared storage
mkdir ${THETA_BASE_DIR}

# write theta files
echo ====== Writing files for job submission
cp -a ${SOURCE}/skeleton ${THETA_BASE_DIR}/config.d
cat > ${THETA_BASE_DIR}/job.cobalt <<EOF
#!/bin/bash

# number of nodes
#COBALT -n ${NODE_CNT}
# wall time request, this is 30min
#COBALT -t ${TIME}
# one of the two debug queues, only difference is KNL cache settings
#COBALT -q ${QUEUE}
# project, this should work for the ALCC allocation
#COBALT -A HighLumin

export MY_JOBID=${JOB_ID}
# MPI launcher, 1 node, 1 MPI rank per node
# basically starts mycommand on both nodes in the batch job
EOF

# Next
# Submitting the "head" job with: Master, Collector, Negotiator, Schedd
echo "aprun -n 1 -N 1 -d 1 -j 1 --cc none --env SLOT_PREFIX=${SLOT_PREFIX} --env COBALT_NODEID=${i} ./cms_init_start.sh &" >> ${THETA_BASE_DIR}/job.cobalt
# Submitting "worker" jobs with: Master, Startd
for ((i=2;i<=${NODE_CNT};i++)); do
    echo "aprun -n 1 -N 1 -d 1 -j 1 --cc none --env SLOT_PREFIX=${SLOT_PREFIX} --env COBALT_NODEID=${i} ./cms_init_start.sh &" >> ${THETA_BASE_DIR}/job.cobalt
    echo "sleep 1" >> ${THETA_BASE_DIR}/job.cobalt
done

echo "wait" >> ${THETA_BASE_DIR}/job.cobalt

chmod a+rx ${THETA_BASE_DIR}/job.cobalt

echo INFO: Files written

echo INFO: Submitting COBALT job 

# Submit cobalt job
cd ${THETA_BASE_DIR}; qsub -A HighLumin -q ${QUEUE} -t ${TIME} -n ${NODE_CNT} --jobname=${SLOT_PREFIX} --attr ssds=required job.cobalt
echo INFO: Done, check your job and files at ${THETA_BASE_DIR}
